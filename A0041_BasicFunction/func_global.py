# coding:utf-8

# 全局变量.



# 如果你想要为一个定义在函数外的变量赋值，那么你就得告诉Python这个变量名不是局部的，而是 全局 的。
# 我们使用global语句完成这一功能。
# 没有global语句，是不可能为定义在函数外的变量赋值的。


# 你可以使用定义在函数外的变量的值（假设在函数内没有同名的变量）。
# 然而，我并不鼓励你这样做，并且你应该尽量避免这样做，因为这使得程序的读者会不清楚这个变量是在哪里定义的。
# 使用global语句可以清楚地表明变量是在外面的块定义的。



def func():
    global x;
    print ('在 func 函数中，处理开始时，x 的数值是：', x);
    x = 2;
    print ('在 func 函数中，处理结束时，x 的数值是：', x);



x = 50;
print ('在主程序中，调用 func 函数以前， x 的数值是：', x);
func();
print ('在主程序中，调用 func 函数以后， x 的数值是：', x);


